package org.freeforums.geforce.beacon.main;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLInterModComms;
import net.minecraftforge.fml.common.event.FMLInterModComms.IMCEvent;
import net.minecraftforge.fml.common.event.FMLInterModComms.IMCMessage;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.network.NetworkCheckHandler;
import net.minecraftforge.fml.relauncher.Side;

import org.freeforums.geforce.beacon.handlers.ForgeEventHandler;
import org.freeforums.geforce.beacon.network.ConfigurationHandler;
import org.freeforums.geforce.beacon.network.Links;

@Mod(modid = "beacon", name = "Beacon", version = mod_Beacon.VERSION, guiFactory = "org.freeforums.geforce.beacon.gui.BeaconGuiFactory", dependencies = mod_Beacon.FORGEVERSION)
public class mod_Beacon {
	
	public static final String MODID = "beacon";
	public static final String NAME = "Beacon";
	private static final String MOTU = "First!";
	
	//TODO ********************************* This is v1.0.7 for MC 1.8!
	protected static final String VERSION = "v1.5.5";
	protected static final String FORGEVERSION = "required-after:Forge@[11.14.0.1252,)";
    public static final String MCVERSION = "1.8";
    public static final boolean isDebugMode = true;
	    
	@Instance("beacon")
	public static mod_Beacon instance = new mod_Beacon();
	
	public Beacon beacon = new Beacon();
	
	public static ForgeEventHandler eventHandler = new ForgeEventHandler();
	public static ConfigurationHandler configHandler = new ConfigurationHandler();
	
	public ArrayList<String> missingMods = new ArrayList<String>();
	
	public static Configuration configFile;
	public static String mcDirectory;
	
	
	@EventHandler
	public void preInit(FMLPreInitializationEvent event){
		mod_Beacon.configFile = new Configuration(event.getSuggestedConfigurationFile());
		this.configHandler.loadConfig(configFile);
		
		try{
			Links.setupLinks();	
		}catch(IOException e){
			System.out.println("*** [Beacon] Beacon has encountered a problem while attempting to download the latest modlist from www.github.com. ***");
		}
		        
        FMLCommonHandler.instance().bus().register(mod_Beacon.eventHandler);
		
		ModMetadata modMeta = event.getModMetadata();
        modMeta.authorList = Arrays.asList(new String[] {
            "Geforce"
        });
        modMeta.autogenerated = false;
        modMeta.credits = "Thanks to Stack Overflow for help with code."; 
        modMeta.description = "Beacon adds the ability to download mods in-game. \nJoin your favorite servers without having to download every mod in your browser! \n \nMessage of the update: \n" + MOTU;
        modMeta.url = "http://www.github.com/Geforce132/Beacon";
        
        FMLInterModComms.sendMessage("beacon", "add-incompatibility", "securitycraft 1.7.2");
        FMLInterModComms.sendMessage("beacon", "add-url", "beacon C:/Users/Cyrell/Desktop/CFPage.htm");
	}
		
	
	@EventHandler
	public void init(FMLInitializationEvent event){}
		
	@EventHandler
	public void recieveMessages(IMCEvent event){
		for(IMCMessage message : event.getMessages()){
			if(message.isStringMessage() && beacon.validKeys.contains(message.key)){	
				instance.beacon.handleMessage(message.getSender(), message.key, message.getStringValue());
			}
		}
	}
	
	@EventHandler
	public void postInit(FMLPostInitializationEvent event){
		MinecraftForge.EVENT_BUS.register(mod_Beacon.eventHandler);
	}
	
	@NetworkCheckHandler
	public boolean onConnectionReceived(Map<String,String> modList, Side side){
		return beacon.onConnectionReceived(modList, side);
	}
	
	public static void log(String par1){
		if(isDebugMode){
			System.out.println("[Beacon] " + par1);
		}
	}

}
